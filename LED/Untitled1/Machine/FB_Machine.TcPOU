<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Machine" Id="{f454b1e6-20f5-4637-accf-f47026bfc69d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Machine
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbUnit : ARRAY[0..MAX_UNIT_NUMBER - 1] OF FB_Unit;
	NumberOfUnit : BYTE := MAX_UNIT_NUMBER;
	oldNumberOfUnit : BYTE;
	Command : E_Command;
	GenerateCommand : E_Command;
	oldCommand : E_Command;
	
	fbLED : ARRAY[0..MAX_UNIT_NUMBER - 1] OF FB_LED;
	ledIndex : BYTE;
	CurrentUnitNum : INT;
	NextUnitNum			:	INT;
	LEDLocation			:	ARRAY[1..2] OF INT;

	i : BYTE;
	binit : BOOL;
	bButtonInit : BOOL;
	
	ForwardButton : FB_Button;
	BackwardButton : FB_Button;
	StopButton : FB_Button;
	GenerateButton : FB_Button;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[ButtonLogic();
IF oldNumberOfUnit <> NumberOfUnit  THEN
	bInit := FALSE;
	ledIndex := 0;
	FOR i:= 0 TO MAX_UNIT_NUMBER - 1 BY 1 DO
		fbLED[i].Reset();
	END_FOR
END_IF

IF isCommandDirectionChanged THEN 
	bInit := FALSE;
END_IF
oldCommand := Command;
oldNumberOfUnit := NumberOfUnit;

IF NOT bInit THEN
	Initalize();
END_IF

GenerateLogic();

(* It assign Unit Interfaces for FB_LED *)
FOR i:= 0 TO MAX_UNIT_NUMBER - 1 BY 1 DO
	IF Command = E_Command.Forward THEN
		CurrentUnitNum := fbLED[i].Location1/5;
		NextUnitNum := fbLED[i].Location1/5 + 1;
		IF NextUnitNum >= MAX_UNIT_NUMBER THEN
			fbLED[i].GetFB_Unit(fbUnit[CurrentUnitNum], 0);
			CONTINUE;
		END_IF
		fbLED[i].GetFB_Unit(fbUnit[CurrentUnitNum], fbUnit[NextUnitNum]);
	ELSIF Command = E_Command.Backward THEN
		CurrentUnitNum := fbLED[i].Location2/5;
		NextUnitNum := fbLED[i].Location2/5 - 1;
		IF NextUnitNum < 0 THEN
			fbLED[i].GetFB_Unit(fbUnit[CurrentUnitNum], 0);
			CONTINUE;
		END_IF
		fbLED[i].GetFB_Unit(fbUnit[CurrentUnitNum], fbUnit[NextUnitNum]);
	END_IF
END_FOR

(* LED Control *)
FOR i:= 0 TO MAX_UNIT_NUMBER - 1 BY 1 DO
	fbUnit[i]();
END_FOR
FOR i:=0 TO ledIndex BY 1 DO
	IF fbLED[i].Location1 = -1 OR fbLED[i].Location2 = -1 THEN
		CONTINUE;
	END_IF
	LEDLocation[1] := fbLED[i].Location1;
	fbUnit[LEDLocation[1]/5].TurnOnLED(LEDLocation[1] MOD 5);
	LEDLocation[2] := fbLED[i].Location2;
	fbUnit[LEDLocation[2]/5].TurnOnLED(LEDLocation[2] MOD 5);
END_FOR
FOR i:= 0 TO MAX_UNIT_NUMBER - 1 BY 1 DO
	fbUnit[i].UpdateStatus();
END_FOR
FOR i:= 0 TO MAX_UNIT_NUMBER - 1 BY 1 DO
	fbLED[i]();
END_FOR]]></ST>
    </Implementation>
    <Method Name="ButtonLogic" Id="{bcb08168-26c3-45ec-8487-4274a995936e}">
      <Declaration><![CDATA[METHOD PRIVATE ButtonLogic : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bButtonInit THEN
	ForwardButton.Initalize(command, E_Command.Forward);
	BackwardButton.Initalize(command, E_Command.Backward);
	StopButton.Initalize(command, E_Command.Stop);
	GenerateButton.Initalize(GenerateCommand, E_Command.Generate);
	bButtonInit := TRUE;
	RETURN;
END_IF

ForwardButton();
BackwardButton();
StopButton();
GenerateButton();]]></ST>
      </Implementation>
    </Method>
    <Property Name="FirstUnitNumber" Id="{00651eac-699c-4216-aac1-8be740748c51}">
      <Declaration><![CDATA[PROPERTY FirstUnitNumber : INT]]></Declaration>
      <Get Name="Get" Id="{1df55a05-c3a7-4064-8953-e0289aec86ac}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//IF Command = E_Command.Forward THEN
//	FirstUnitNumber := 0;
IF Command = E_Command.Backward THEN
	FirstUnitNumber := MAX_UNIT_NUMBER - 1;
ELSE
	FirstUnitNumber := 0;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GenerateLogic" Id="{117b607c-f975-4134-a958-56a2899754b8}">
      <Declaration><![CDATA[METHOD PRIVATE GenerateLogic
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF GenerateCommand = E_Command.Generate AND fbUnit[0].isReceiveable THEN
	fbLED[ledIndex].Initalize(Command);
	ledIndex := ledIndex + 1;
	GenerateCommand := E_Command.Stop;
	ledIndex := LIMIT(0,ledIndex,MAX_UNIT_NUMBER - 1);
ELSE
	GenerateCommand := E_Command.Stop;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initalize" Id="{a40c86fa-537a-421f-be3e-1fdb97d67ff4}">
      <Declaration><![CDATA[METHOD Initalize : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[NumberOfUnit := LIMIT(1,NumberOfUnit,MAX_UNIT_NUMBER);
FOR i:= 0 TO MAX_UNIT_NUMBER - 1 BY 1 DO
	fbUnit[i].Initalize(Command, i, 0, 0);
END_FOR

IF Command = E_Command.Forward THEN
	fbUnit[0].Initalize(Command, 0, 0, fbUnit[1]);
	FOR i:= 1 TO NumberOfUnit - 2 BY 1 DO
		fbUnit[i].Initalize(Command, i, fbUnit[i-1], fbUnit[i+1]);
	END_FOR
	fbUnit[NumberOfUnit - 1].Initalize(Command, NumberOfUnit-2, fbUnit[NumberOfUnit -2 ], 0);
ELSIF Command = E_Command.Backward THEN
	fbUnit[NumberOfUnit -1 ].Initalize(Command, NumberOfUnit-2, 0, fbUnit[NumberOfUnit - 2]);
	FOR i:= NumberOfUnit - 2 TO  1 BY -1 DO
		fbUnit[i].Initalize(Command, i, fbUnit[i+1], fbUnit[i-1]);
	END_FOR
	fbUnit[0].Initalize(Command, 0, fbUnit[1], 0);
END_IF

bInit := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="isCommandDirectionChanged" Id="{1de85dab-f228-4c9e-b46d-fa80c9045c50}">
      <Declaration><![CDATA[PROPERTY isCommandDirectionChanged : BOOL]]></Declaration>
      <Get Name="Get" Id="{1162b701-11e1-4463-9467-02d2d2714ad4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[isCommandDirectionChanged := (Command = E_Command.Forward AND oldCommand = E_Command.Backward) OR (Command = E_Command.Backward AND oldCommand = E_Command.Forward);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LastUnitNumber" Id="{5808c0cf-5667-4f69-ac1d-42a16c95fad2}">
      <Declaration><![CDATA[PROPERTY LastUnitNumber : INT]]></Declaration>
      <Get Name="Get" Id="{397cf324-af5b-4039-8c2a-f1a280514e55}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//IF Command = E_Command.Forward THEN
//	LastUnitNumber := MAX_UNIT_NUMBER - 1;
IF Command = E_Command.Backward THEN
	LastUnitNumber := 0;
ELSE
	LastUnitNumber := MAX_UNIT_NUMBER - 1;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_Machine">
      <LineId Id="426" Count="0" />
      <LineId Id="511" Count="1" />
      <LineId Id="518" Count="0" />
      <LineId Id="514" Count="2" />
      <LineId Id="513" Count="0" />
      <LineId Id="519" Count="0" />
      <LineId Id="427" Count="3" />
      <LineId Id="510" Count="0" />
      <LineId Id="431" Count="3" />
      <LineId Id="495" Count="0" />
      <LineId Id="501" Count="0" />
      <LineId Id="443" Count="2" />
      <LineId Id="447" Count="6" />
      <LineId Id="500" Count="0" />
      <LineId Id="454" Count="6" />
      <LineId Id="498" Count="0" />
      <LineId Id="461" Count="0" />
      <LineId Id="463" Count="0" />
      <LineId Id="481" Count="0" />
      <LineId Id="483" Count="2" />
      <LineId Id="464" Count="8" />
      <LineId Id="486" Count="4" />
      <LineId Id="492" Count="0" />
      <LineId Id="362" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine.ButtonLogic">
      <LineId Id="6" Count="6" />
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="3" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine.FirstUnitNumber.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="3" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine.GenerateLogic">
      <LineId Id="7" Count="6" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine.Initalize">
      <LineId Id="50" Count="0" />
      <LineId Id="52" Count="2" />
      <LineId Id="51" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="35" Count="3" />
      <LineId Id="33" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="41" Count="4" />
      <LineId Id="34" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="49" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine.isCommandDirectionChanged.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine.LastUnitNumber.Get">
      <LineId Id="5" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>